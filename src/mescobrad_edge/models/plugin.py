# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from mescobrad_edge.models.base_model_ import Model
from mescobrad_edge import util


class Plugin(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, description: str=None, type: str=None, version: str=None, url: str=None):  # noqa: E501
        """Plugin - a model defined in Swagger

        :param id: The id of this Plugin.  # noqa: E501
        :type id: str
        :param name: The name of this Plugin.  # noqa: E501
        :type name: str
        :param description: The description of this Plugin.  # noqa: E501
        :type description: str
        :param type: The type of this Plugin.  # noqa: E501
        :type type: str
        :param version: The version of this Plugin.  # noqa: E501
        :type version: str
        :param url: The url of this Plugin.  # noqa: E501
        :type url: str
        """
        self.swagger_types = {
            'id': str,
            'name': str,
            'description': str,
            'type': str,
            'version': str,
            'url': str
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'description': 'description',
            'type': 'type',
            'version': 'version',
            'url': 'url'
        }

        self._id = id
        self._name = name
        self._description = description
        self._type = type
        self._version = version
        self._url = url

    @classmethod
    def from_dict(cls, dikt) -> 'Plugin':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Plugin of this Plugin.  # noqa: E501
        :rtype: Plugin
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Plugin.


        :return: The id of this Plugin.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Plugin.


        :param id: The id of this Plugin.
        :type id: str
        """

        self._id = id

    @property
    def name(self) -> str:
        """Gets the name of this Plugin.


        :return: The name of this Plugin.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Plugin.


        :param name: The name of this Plugin.
        :type name: str
        """

        self._name = name

    @property
    def description(self) -> str:
        """Gets the description of this Plugin.


        :return: The description of this Plugin.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Plugin.


        :param description: The description of this Plugin.
        :type description: str
        """

        self._description = description

    @property
    def type(self) -> str:
        """Gets the type of this Plugin.


        :return: The type of this Plugin.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this Plugin.


        :param type: The type of this Plugin.
        :type type: str
        """

        self._type = type

    @property
    def version(self) -> str:
        """Gets the version of this Plugin.


        :return: The version of this Plugin.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this Plugin.


        :param version: The version of this Plugin.
        :type version: str
        """

        self._version = version

    @property
    def url(self) -> str:
        """Gets the url of this Plugin.


        :return: The url of this Plugin.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url: str):
        """Sets the url of this Plugin.


        :param url: The url of this Plugin.
        :type url: str
        """

        self._url = url
